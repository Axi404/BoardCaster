name: Update JSON and Generate Markdown on Issue Creation

on:
  issues:
    types: [closed]

jobs:
  update-json:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        persist-credentials: true

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

    - name: Check if issue body is valid JSON
      id: check_json
      run: |
        ISSUE_BODY="${{ github.event.issue.body }}"
        FIRST_CHAR=$(echo "$ISSUE_BODY" | head -c 1)
        if [ "$FIRST_CHAR" != "{" ]; then
          echo "Issue body is not valid JSON. Skipping further steps."
          exit 0
        fi

    - name: Extract issue content
      id: extract_content
      run: |
        echo "::set-output name=name::$(echo '${{ github.event.issue.body }}' | jq -r '.name')"
        echo "::set-output name=institute::$(echo '${{ github.event.issue.body }}' | jq -r '.institute')"
        echo "::set-output name=description::$(echo '${{ github.event.issue.body }}' | jq -r '.description')"
        echo "::set-output name=deadline::$(echo '${{ github.event.issue.body }}' | jq -r '.deadline')"
        echo "::set-output name=website::$(echo '${{ github.event.issue.body }}' | jq -r '.website')"
        echo "::set-output name=tags::$(echo '${{ github.event.issue.body }}' | jq -r '.tags | tojson')"

    - name: Update JSON file
      run: |
        python scripts/update_json.py
      env:
        INPUT_NAME: ${{ steps.extract_content.outputs.name }}
        INPUT_INSTITUTE: ${{ steps.extract_content.outputs.institute }}
        INPUT_DESCRIPTION: ${{ steps.extract_content.outputs.description }}
        INPUT_DEADLINE: ${{ steps.extract_content.outputs.deadline }}
        INPUT_WEBSITE: ${{ steps.extract_content.outputs.website }}
        INPUT_TAGS: ${{ steps.extract_content.outputs.tags }}

    - name: Generate Markdown file
      run: |
        python scripts/generate_markdown.py

    - name: Commit and push JSON and Markdown files
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add data.json output.md
        git commit -m "Update data.json and output.md with new issue"
        git push